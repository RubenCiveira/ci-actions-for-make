<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<groupId>net.civeira</groupId>
	<artifactId>documentation</artifactId>
	<version>0.0.2-SNAPSHOT</version>
	<properties>
		<asciidoctor.maven.plugin.version>2.2.2</asciidoctor.maven.plugin.version>
		<gem.home>${basedir}/../develop/bin/rubygems/</gem.home>
		<gem.path>${basedir}/../develop/bin/rubygems/</gem.path>
		<kroki.server>https://kroki.io</kroki.server>
		<input.book>*</input.book>
		<pdf.theme>base</pdf.theme>
		<net.kroki.server>https://kroki.io</net.kroki.server>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.sourceEncoding>UTF-8</project.reporting.sourceEncoding>
	</properties>
	<repositories>
		<repository>
			<id>mavengems</id>
			<name>Paquetes binarios de ruby para maven</name>
			<url>mavengem:https://rubygems.org</url>
		</repository>
	</repositories>
	<build>
		<sourceDirectory>src/main/void</sourceDirectory>
		<testSourceDirectory>src/test/void</testSourceDirectory>
		<extensions>
			<extension>
				<!-- this allows us to download gems -->
				<groupId>org.jruby.maven</groupId>
				<artifactId>mavengem-wagon</artifactId>
				<version>2.0.2</version>
			</extension>
		</extensions>
		<plugins>
			<plugin>
				<groupId>de.saumya.mojo</groupId>
				<artifactId>gem-maven-plugin</artifactId>
				<version>2.0.1</version>
				<executions>
					<execution>
						<id>install-gems-for-asciidoctor</id>
						<goals>
							<goal>sets</goal>
						</goals>
						<configuration>
							<gems>
								<asciidoctor-pdf>2.1.2</asciidoctor-pdf>
								<asciidoctor-kroki>0.6.0</asciidoctor-kroki>
							</gems>
							<jrubyVersion>9.2.5.0</jrubyVersion>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>pdf</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctor-maven-plugin</artifactId>
						<version>2.2.2</version>
						<executions>
							<execution>
								<id>convert-to-pdf</id>
								<phase>compile</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<attributes>
										<source-highlighter>coderay</source-highlighter>
										<kroki-server-url>${kroki.server}</kroki-server-url>
										<!-- kroki require these images directory -->
										<imagesdir>../images</imagesdir>
										<kroki-fetch-diagram>true</kroki-fetch-diagram>
										<toclevels>3</toclevels>
										<kroki-default-format>png</kroki-default-format>
										<icons>font</icons>
										<kroki-http-method>post</kroki-http-method>
										<toclevels>3</toclevels>
										<icons>font</icons>
										<toc>right</toc>
										<allow-uri-read>true</allow-uri-read>
										<pdf-theme>./${pdf.theme}</pdf-theme>
										<pdf-themesdir>./theme</pdf-themesdir>
									</attributes>
									<backend>pdf</backend>
									<baseDir>${project.build.directory}/tmp</baseDir>
									<sourceDirectory>${project.build.directory}/tmp/</sourceDirectory>
									<outputDirectory>${project.build.directory}/tmp-out</outputDirectory>
									<sourceDocumentExtensions>
		                                <sourceDocumentExtension>adoc</sourceDocumentExtension>
		                            </sourceDocumentExtensions>
									<relativeBaseDir>true</relativeBaseDir>
									<preserveDirectories>true</preserveDirectories>
									<requires>
										<require>asciidoctor-kroki</require>
										<require>asciidoctor-pdf</require>
									</requires>
									<gemPath>${gem.home}</gemPath>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>org.jruby</groupId>
								<artifactId>jruby</artifactId>
								<version>9.3.8.0</version>
							</dependency>
							<dependency>
								<groupId>org.asciidoctor</groupId>
								<artifactId>asciidoctorj</artifactId>
								<version>2.5.7</version>
							</dependency>
							<dependency>
								<groupId>org.asciidoctor</groupId>
								<artifactId>asciidoctorj-pdf</artifactId>
								<version>2.3.3</version>
							</dependency>
						</dependencies>
						<configuration />
					</plugin>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>3.2.0</version>
						<executions>
							<execution>
								<id>copy-resources-all</id>
								<phase>validate</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<resources>
										<resource>
											<directory>${basedir}/src/main/docs</directory>
											<filtering>false</filtering>
											<excludes>
		                                        <exclude>**/*.adoc</exclude>
											</excludes>
										</resource>
									</resources>
									<outputDirectory>${project.build.directory}/tmp</outputDirectory>
									<overwrite>true</overwrite>
								</configuration>
							</execution>
							<execution>
								<id>copy-resources-books</id>
								<phase>validate</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<resources>
										<resource>
											<directory>${basedir}/src/main/docs</directory>
											<filtering>false</filtering>
											<includes>
												<include>**/${input.book}.adoc</include>
											</includes>
										</resource>
									</resources>
									<outputDirectory>${project.build.directory}/tmp</outputDirectory>
									<overwrite>true</overwrite>
								</configuration>
							</execution>
							<!-- 
								for some reason, kroki needs to define ../images as images dir
								so we copy the images to that directory
							 -->
							<execution>
								<id>copy-resources-images-to-use-with-kroki</id>
								<phase>validate</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<resources>
										<resource>
											<directory>${basedir}/src/main/docs/images</directory>
											<filtering>false</filtering>
										</resource>
									</resources>
									<outputDirectory>${project.build.directory}/images</outputDirectory>
									<overwrite>true</overwrite>
								</configuration>
							</execution>
							<execution>
								<id>copy-pdf-files</id>
								<phase>compile</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<resources>
										<resource>
											<directory>${project.build.directory}/tmp-out</directory>
											<filtering>false</filtering>
											<includes>
												<include>**/${input.book}.pdf</include>
											</includes>
										</resource>
									</resources>
									<outputDirectory>${project.build.directory}/pdf</outputDirectory>
									<overwrite>true</overwrite>
								</configuration>
							</execution>
						</executions>
						<configuration />
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
